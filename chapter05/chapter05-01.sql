-- D:\dev\database\workspace\chapter04\chapter05-01.sql

-- 데이터 모델링
-- : 현실 세계의 복잡한 개념(현실 객체)을 단순화하고 추상화시켜 데이터베이스화하는 과정

-- * 데이터베이스 생명주기
-- 1. 요구사항 수집 및 분석
-- - 사용자들의 요구사항을 듣고 분석하여 데이터베이스 구축의 범위를 정하는 단계

-- 2. 설계
-- - 분석된 요구사항을 기초로 주요 개념과 업무 프로세스 등을 식별하고 (개념적 설계)
--   , 사용하는 dbms의 종류에 맞게 변환(논리적 설계)한 후 데이터베이스 스키마를 도출(물리적설계)

-- 3. 구현
-- - 설계 단계에서 생성한 스키마를 실제 dbms에 적용하여 테이블 및 관련 객체(뷰, 인덱스 등)을 만듦
-- - 관련 소프트웨어에 설계한 데이터베이스를 적용하여 서비스를 제공할 수 있도록 프로그램 완성

-- 4. 운영
-- - 구현된 데이터베이스를 기반으로 소프트웨어를 구축하여 서비스 제공

-- 5. 감시 및 개선
-- - 데이터베이스 운영에 따른 시스템 문제 관찰, 데이터베이스 자체 문제점 파악 후 개선
-- - 데이터베이스가 지속적으로 운영될 수 있도록 변경 및 유지 보수

-- ? 마당서점의 논리적 모델링
-- 마당서점은 출판사에서 도서를 공급받아 판매하고, 
-- 판매 내역은 매일 기록으로 남기며 고객 서비스와 매출 관리에 활용
-- 마당서점의 요구사항
-- - 도서 목록에는 도서 번호, 도서 이름, 출판사 이름, 도서단가를 기록함 (개체)
-- - 출판사 목록에는 출판사이름, 담당자이름, 전화번호를 기록함 (개체)
-- - 고객 목록에는 고객번호, 고객이름, 주소, 전화번호를 기록함 (개체)
-- - 마당서점은 출판사에서 공급한 도서만 등록하여 관리함
--   (출판사와 도서의 관계는 1:N)
-- - 고객은 여러 번에 걸쳐 여러권의 도서 구입 가능
--   (고객과 도서의 관계는 N:N)
-- - 마당서점은 고객이 도서를 구입한 날(주문일자)과 구매한 가격(주문금액)을 따로 저장함
--   (고객과 도서의 관계에 속성이 존재함)

-- * 관계 대응 수에 따른 관계 타입의 유형
-- 1. 일대일(1:1) 관계
-- - 좌측 개체 타입에 포함된 개체가 우측 개체 타입에 포함된 개체와 일대일로 대응하는 관계
-- - e.g., 회사에서 사원이 개인별로 1대의 컴퓨터만 사용 시, 사원과 컴퓨터 관계 = 1:1

-- 2. 일대다(1:N), 다대일(N:1) 관계
-- - 한쪽 개체 타입의 개체 하나가 다른 쪽 개체 타입의 여러 개체와 관계를 맺는 경우
-- - e.g., 학과와 학생의 소속 관계 - 하나의 학과에는 여러 명의 학생들이 소속되어 있음
-- - N은 0 이상의 자연수

-- 3. 다대다(N:M) 관계
-- - 각 개체 타입의 개체들이 서로 임의의 개수 개체들과 서로 복합적 관계를 맺고 있는 경우
-- - e.g., 학생과 강좌의 수강 관계 - 한 학생은 여러 강좌 수강, 한 강좌에서 여러 학생 수강 가능

-- ? 마당서점의 물리적 모델링
-- - 물리적 모델 단계에서는 기존 논리적 모델에서 생성한 개체의 이름과 속성의 이름을 
-- - 실제 사용할 테이블 이름, 컬럼 이름으로 변경해주어야 함
























