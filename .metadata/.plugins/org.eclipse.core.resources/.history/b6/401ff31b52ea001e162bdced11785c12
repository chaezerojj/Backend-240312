package chapter21;

import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;

//? Map 컬렉션
// - 키(Key)와 값(Value)으로 구성된 객체를 저장하는 구조를 가지고 있음
// - 키는 중복 저장 X, 값은 중복 저장 O
// - 만약, 기존에 저장된 키와 동일한 키로 값 저장 시, 기존의 값은 없어지고 새로운 값으로 대체됨
// - 키와 값의 타입은 Wrapper 클래스 사용 
// - e.g., >> Integer


public class HashMapClass {
	
	public static void main(String[] args) {
		Map<String, Integer> map = new HashMap<>();
		// Map<key, value>
		
		// 객체 저장 - put()
		map.put("홍길동", 50);
		map.put("김길동", 45);
		map.put("박길동", 50);
		map.put("이길동", 61);
		map.put("최길동", 61);
		
		// 저장된 총 요소의 개수 얻기 - size()
		System.out.println("총 요소의 개수: " + map.size());
		
		// 객체 찾기(얻기) - get(키) >> 값이 반환됨
		System.out.println("홍길동: "+ map.get("홍길동"));
		System.out.println("김길동: "+ map.get("김길동"));
		
		System.out.println("====================");
		
		// 반복문 >> Iterator 사용
		// - 모든 키 값을 Set 컬렉션으로 변환
		// - key의 모든 set을 얻기 - key.set()
		Set<String> keySet = map.keySet();
		for (String s : keySet) {
			System.out.println(s);
		}
		System.out.println("====================");

		Iterator<String> kItr = keySet.iterator();
		while(kItr.hasNext()) {
			System.out.println(kItr.next());
		}
		
		
		
		
	}
	
	
	
}
