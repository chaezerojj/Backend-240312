package chapter24;

import java.util.Arrays;
import java.util.stream.IntStream;

import chapter23.Calculate;

// 람다식 이전에는 라이브러리를 가져와서 사용
// 일부분은 내 코드로 커스터마이징하여 연계한 후 실행시키는 일이 많았음
// 자바에서는 상속과 구현을 통해 표현함 (오버라이딩)
// 구현을 통해 람다식을 사용할 수 있게 업데이트됨

// ? 스트림

public class AboutStream {
	public static void main(String[] args) {
		// 스트림
		// : 배열이나 컬렉션에서 람다식을 사용할 수 있게 만들어둔 기능
		int[] arr = {1, 2, 3, 4, 5};
		// 배열 arr로부터 스트림 생성
		IntStream stm1 = Arrays.stream(arr);
		// filter(매개변수)가 인터페이스형 참조 변수가 선언되어 있음
		// 인터페이스형 참조변수에 참조시킬 수 있는 방법 3가지
		// 1. 인터페이스를 구현한 클래스 생성
		// 2. 익명클래스
		// 3. 람다식 사용
		// predicate 인터페이스 내 미완성 메소드
		// >> boolean test(T t) - 참조변수가 있어서 인터페이스 내 사용 가능
		// Generic(제네릭)
		// - 인스턴스 참조 가능한 참조변수
		// - 데이터 타입은 고정 X
		// - Object obj(오브젝트 클래스 참조변수)와 유사하지만 더 좋은 기능을 갖춤
		stm1.filter(null);
		
		
	}
	
	public static void filterCopy(Calculate c) {
		
	}
}
